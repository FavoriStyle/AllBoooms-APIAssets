import{rand,createElement}from"./_system.js";const RuleID=Symbol(),RuleProp=Symbol(),RuleVal=Symbol(),Sheet=Symbol(),Set=Symbol(),RuleSetInnerHTML=Symbol(),CalcRuleProps=Symbol(),tab=(e=1)=>{for(var t="",r=0;r<e;r++)t+="    ";return t};class CSSRuleSetError extends Error{}export class CSSRule{constructor(e,t,r){this[RuleID]=`${e}_${rand()}_${rand()}`,this[RuleProp]=e,this[Set]=r,this.set(t)}[Symbol.toPrimitive](){return`${this[RuleProp]}: ${"number"==typeof this[RuleVal]&&0!==this[RuleVal]?this[RuleVal]+"px":this[RuleVal]};`}set(e){const t=`/* ${this[RuleID]} */\n`;this[RuleVal]=e;const r=(this[Set][RuleSetInnerHTML]||"").split(t),s=(r[1]||"").split("\n");s.shift(),r[1]=s.join("\n"),this[Set][RuleSetInnerHTML]=r.join(t+`${tab()}${this}\n`)}get(){return this[RuleVal]}remove(){const e=`${this[RuleID]}\n`;this[RuleVal]=null;const t=(this[Set][RuleSetInnerHTML]||"").split(e),r=(t[1]||"").split("\n");r.shift(),t[1]=r.join("\n"),this[Set][RuleSetInnerHTML]=t.join(""),this[Set][Set].arr.splice(this[Set][Set].store[this[RuleProp]],1)}};function isCalcRule(e){return e&&"object"==typeof e&&"calc"===e.ruleType}var CSSCalcInnerRuleset;export class CSSCalcRule extends CSSRule{constructor(e,{firstArg:t,operator:r,secondArg:s},l){CSSCalcInnerRuleset||(CSSCalcInnerRuleset=new CSSRuleSet("inner-calc-ruleset",document.createElement("div").attachShadow({mode:"closed"}))),isCalcRule(t)&&(t=new CSSCalcRule("inner-calc-rule",t,CSSCalcInnerRuleset)),isCalcRule(s)&&(s=new CSSCalcRule("inner-calc-rule",s,CSSCalcInnerRuleset)),super(e,`calc(${t} ${r} ${s})`,l),this[CalcRuleProps]={},this.firstArg=t,this.operator=r,this.secondArg=s}[Symbol.toPrimitive](){const e="inner-calc-rule"===this[RuleProp];return`${e?"":this[RuleProp]+": "}${this[RuleVal]}${e?"":";"}`}set firstArg(e){this[CalcRuleProps].firstArg=e,super.set(`calc(${e} ${this[CalcRuleProps].operator} ${this[CalcRuleProps].secondArg})`)}get firstArg(){return this[CalcRuleProps].firstArg}set operator(e){if("+"!=e&&"-"!=e&&"*"!=e&&"/"!=e)throw new TypeError("operator must be one of +, -, * or /");this[CalcRuleProps].operator=e,super.set(`calc(${this[CalcRuleProps].firstArg} ${e} ${this[CalcRuleProps].secondArg})`)}get operator(){return this[CalcRuleProps].operator}set secondArg(e){if(("*"===this[CalcRuleProps].operator||"/"===this[CalcRuleProps].operator)&&"number"!=typeof e)throw new TypeError("secondArg must be of type number because of operator is "+this[CalcRuleProps].operator);this[CalcRuleProps].secondArg=e,super.set(`calc(${this[CalcRuleProps].firstArg} ${this[CalcRuleProps].operator} ${e})`)}get secondArg(){return this[CalcRuleProps].secondArg}};export default class CSSRuleSet{constructor(e,t=document.head){const r=encodeURIComponent(e);var s=document.querySelector(`style[data-selector="${r}"]`);s||(s=createElement({name:"style",html:`${e}{\n\n}`}),t.appendChild(s)),Object.defineProperty(this,"selector",{writable:!1,configurable:!1,value:e}),this[Sheet]=s,this[Set]={store:{},arr:[]}}get[RuleSetInnerHTML](){const e=this[Sheet].innerHTML.split("\n");return e.shift(),e.pop(),e.join("\n")}set[RuleSetInnerHTML](e){this[Sheet].innerHTML=`${this.selector}{\n${e}\n}`}get(e){return void 0!==this[Set].store[e]?this[Set].arr[this[Set].store[e]]:null}add(e,t){if(void 0===t&&"object"==typeof e){var r={};for(var s in e)r[s]=this.add(s,e[s]);return r}if("string"!=typeof e)throw new TypeError("prop must be of type string, given "+typeof e);if("string"!=typeof t&&"number"!=typeof t&&!isCalcRule(t))throw new TypeError('val must be of type string, number or object with ruleType: "calc", given '+typeof e);if(this.get(e))throw new CSSRuleSetError(e+" rule is already defined. Use a CSSRule instance instead");var l;return l=isCalcRule(t)?new CSSCalcRule(e,t,this):new CSSRule(e,t,this),this[Set].store[e]=this[Set].arr.push(l)-1,l}all(){return[...this[Set].arr]}};